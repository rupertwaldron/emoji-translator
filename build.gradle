plugins {
    id 'application'
    id 'com.dorongold.task-tree' version "2.1.1"
    id 'org.barfuin.gradle.taskinfo' version "2.1.0"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'jacoco'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'checkstyle'
}

group = 'com.ruppyrup'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}


application {
    mainClass = 'com.ruppyrup.Main'
}

tasks.register('runWithArg', JavaExec) {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(20)
    }
    mainClass = 'com.ruppyrup.Main'
    classpath = sourceSets.main.runtimeClasspath
    args 'hello world'
}

tasks.register('runJar', JavaExec) {
    classpath shadowJar.outputs
//    classpath jar.outputs
//    classpath sourceSets.main.runtimeClasspath // addes libraries to jar
    mainClass = 'com.ruppyrup.Main'
    args 'uncle bob'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    junitJupiterVersion = '5.9.1'
}

sourceSets {
    integrationTest {
        java {
            srcDir "$projectDir/src/integrationTest/java"
        }
        resources {
            srcDir "$projectDir/src/integrationTest/resources"
        }

        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

tasks.register('integrationTest', Test) {
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'net.fellbaum:jemoji:1.1.5'
    testImplementation platform("org.junit:junit-bom:${junitJupiterVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            srcDir "$projectDir/src/integrationTest/java"
        }
        resources {
            srcDir "$projectDir/src/integrationTest/resources"
        }

        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

integrationTest {
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

jacoco {
    toolVersion = "0.8.9"
//    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jar {
    onlyIf {
        !tasks.named('shadowJar').isPresent() // only want the one jar if using shadowJar
    }
    manifest {
        attributes["Main-Class"] = "com.ruppyrup.Main"
    }
}

shadowJar {
//    archivesBaseName = 'gradleDemo1'
    archiveVersion = version
    manifest {
        attributes 'Main-Class': 'com.ruppyrup.Main'
    }
}


test.finalizedBy jacocoTestReport

wrapper {
    gradleVersion '8.1.1'
    setDistributionType Wrapper.DistributionType.ALL
}

publishing {
    publications {
        myDistribution(MavenPublication) {
//            artifact 'build/libs/gradleDemo1-1.0-SNAPSHOT-all.jar'
            artifact shadowJar.archiveFile
        }
    }
}

build.finalizedBy('publishToMavenLocal')